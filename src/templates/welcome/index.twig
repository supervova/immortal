{% extends "base/base.twig" %}
{% from "base/macros.twig" import icon %}

{% block config %}
  {{ parent() }}

  {% set page = {
    lang: 'en',
    is_onboarding_start: true,
    title: 'Create Your Digital Person ‚Äî Echo Immortal',
    desc: 'Start creating your Digital Person by sharing your memories, values, and personality traits. Our simple onboarding process helps craft an AI avatar that reflects who you truly are.',
    user_email: 'vladimir.nikishin@gmail.com',
    link: site.url ~ '/welcome'
  } %}

  {% set questions = [
    '<p><strong>Hello! Let‚Äôs get straight to the point:</strong> let‚Äôs create your digital persona. Please start by providing your email address.</p>'
  ] %}

{% endblock %}

{% block head %}
  {{ parent() }}
  <link rel="stylesheet" href="/assets/css/onboarding.css?{{ timestamp }}">
{% endblock %}

{# MAIN CONTENT ------------------------------------------------------------- #}
{% block content %}

  <main
    class="e-main is-flex-column">
    {# Progress component #}

    <div class="e-messages is-centering">
      {% include 'components/message.twig' with {
        content: questions[0],
        avatar: 'avatar-dp',
        is_incoming: true,
        classes: 'has-large-avatar max-w-none',
        send_time: 'now'|date('H:i')
      } %}
    </div>

    <form class="e-form is-chat-input" action="/welcome" method="get" novalidate>
      <div class="e-form__control">
        <label for="form-chat-input" class="visually-hidden">Message Echo Immortal</label>
        <textarea id="form-chat-input" autofocus spellcheck="false" placeholder="Enter your email address"></textarea>
        <button class="e-btn is-icon" type="submit" disabled aria-label="Send answer">
          {{ icon('arrow-up') }}
        </button>
      </div>
      <footer class="e-form__footer is-security">
        {{ icon('sm-lock', 'is-sm') }}
        <span>
          Secure SSL Encryption
          {# TODO: Remove on production #}
          <button class="e-btn is-link" type="button" data-role="open-overlay" data-target="freewall">
            üî¥
          </button>
        </span>
      </footer>
    </form>
  </main>
{% endblock %}

{% block footer %}{% endblock %}

{% block body_suffix %}
  {{ parent() }}

  <dialog class="e-modal is-signin" id="modal-signin">
    <div class="e-modal__base is-small">
      <header class="mb-2">
        {{ icon('mail', 'is-large') }}
        <h2 class="h3">Sign in with email</h2>
        <p class="text-2ry">Train and control your digital person</p>
      </header>
      <form class="e-modal__body" action="/sign-in" novalidate>
        <p class="e-form__control is-compact">
          <label class="e-label is-icon" for="input-email" aria-label="Your email">
            {{ icon('mail') }}
          </label>
          <input id="input-email" name="email" type="email" autocomplete="email" required placeholder="Email address">
          <span class="e-form__error">
            <small role="alert">Please enter a¬†valid email address.</small>
          </span>
        </p>
        <p class="e-form__control is-compact is-password">
          <label class="e-label is-icon" for="input-password" aria-label="Your password">
            {{ icon('lock') }}
          </label>
          <input id="input-password" name="password" type="password" autocomplete="off" required placeholder="Password">
          <span class="e-form__error">
            <small role="alert">Your password must be at least 8 characters long and include at least one letter and one number.</small>
          </span>
          <button class="e-btn is-icon is-ghost" type="button" aria-label="Show/hide password">
            {{ icon('eye-slash') }}
            {{ icon('eye', 'd-none') }}
          </button>
        </p>
        <button class="e-btn is-primary w-100" type="submit" disabled>Sign in</button>
      </form>
      <footer>
        <small role="separator">Or authorize with</small>
        <div class="e-buttons">
          <button class="e-btn is-outline" type="submit" data-action="authorization-google" aria-label="Authorize with Google" >
            {{ icon('brand-google') }}
          </button>
          <button class="e-btn is-outline" type="submit" data-action="authorization-google" aria-label="Authorize with Google" >
            {{ icon('brand-facebook') }}
          </button>
          <button class="e-btn is-outline" type="submit" data-action="authorization-google" aria-label="Authorize with Google" >
            {{ icon('brand-apple') }}
          </button>
        </div>
        <p class="e-modal__cta">
          <strong> <a href="/welcome">Sign up</a></strong>
          <a href="/recovery">Forgot password?</a>
        </p>
      </footer>
    </div>
  </dialog>

  <div class="e-modal is-freewall" id="freewall">
    <form class="e-modal__base is-small" id="form-confirmation" action="/welcome">
      <div class="e-modal__body">
        {{ icon('mail') }}
        <h2>Please enter the¬†code sent to
          <strong>{{ user_email }}</strong>
        </h2>
        <fieldset class="d-flex">
          <input type="number">
          <input type="number">
          <input type="number">
          <input type="number">
          <input type="number">
          <input type="number">
        </fieldset>
      </div>
      <footer>
        <button class="e-btn is-outline" type="submit" disabled>Verify email</button>
      </footer>
    </form>
  </div>

  <script>

    /** Authorization */
    document.addEventListener('DOMContentLoaded', () => {
      const emailInput = document.querySelector('#input-email');
      const passwordInput = document.querySelector('#input-password');
      const submitButton = document.querySelector("button[type='submit'].is-primary");
      const passwordToggleButton = document.querySelector('.e-form__control.is-password .e-btn');
      const eyeSlashIcon = document.querySelector('.e-icon.is-eye-slash');
      const eyeIcon = document.querySelector('.e-icon.is-eye');

      // –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ email –∏ –ø–∞—Ä–æ–ª—è
      const emailPattern = /^[^\s@]+@[^\s@]+\.[a-zA-Z]{2,}$/;
      const passwordPattern = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/;

      // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º—ã
      function checkFormValidity() {
        const isEmailValid = emailPattern.test(emailInput.value);
        const isPasswordValid = passwordPattern.test(passwordInput.value);

        // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
        submitButton.disabled = !(isEmailValid && isPasswordValid);
      }

      // –°–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–∏ –≤–≤–æ–¥–µ
      emailInput.addEventListener('input', checkFormValidity);
      passwordInput.addEventListener('input', checkFormValidity);

      // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è
      passwordToggleButton.addEventListener('click', () => {
        const isPasswordVisible = passwordInput.type === 'text';

        // –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–∏–ø –ø–æ–ª—è
        passwordInput.type = isPasswordVisible ? 'password' : 'text';

        // –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∫–ª–∞—Å—Å—ã —É –∏–∫–æ–Ω–æ–∫
        eyeSlashIcon.classList.toggle('d-none', !isPasswordVisible);
        eyeIcon.classList.toggle('d-none', isPasswordVisible);
      });

      // –ù–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏
      checkFormValidity();
    });

    /** Control of verification code completion */
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('form-confirmation');
      const inputs = form.querySelectorAll('input[type="number"]');
      const submitButton = form.querySelector('button[type="submit"]');

      inputs.forEach((input, index) => { // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤–≤–æ–¥–∞ –¥–æ 1 —Å–∏–º–≤–æ–ª–∞
        input.addEventListener('input', () => {
          input.value = input.value.slice(0, 1);

          // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ñ–æ–∫—É—Å–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –ø–æ–ª–µ
          if (input.value && index < inputs.length - 1) {
            inputs[index + 1].focus();
          }

          // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –ø–æ–ª–µ–π
          checkFormCompletion();
        });

        // –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ–∫—É—Å–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Backspace –Ω–∞ –ø—É—Å—Ç–æ–º –ø–æ–ª–µ
        input.addEventListener('keydown', (e) => {
          if (e.key === 'Backspace' && input.value === '' && index > 0) {
            inputs[index - 1].focus();
          }
        });
      });

      // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –≤—Å–µ –ø–æ–ª—è
      function checkFormCompletion() {
        const allFilled = Array.from(inputs).every((input) => input.value !== '');
        submitButton.disabled = ! allFilled;
      }

      // –ó–∞–ø—Ä–µ—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã, –µ—Å–ª–∏ –Ω–µ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
      form.addEventListener('submit', (e) => {
        const allFilled = Array.from(inputs).every((input) => input.value !== '');
        if (! allFilled) {
          e.preventDefault();
        }
      });
    });

    /** Open freewall */
    document.addEventListener('DOMContentLoaded', () => {
      document.querySelector('[data-role="open-overlay"]').addEventListener('click', (event) => {
        const trigger = event.currentTarget;
        const overlay = trigger.getAttribute('data-target');
        document.getElementById(overlay).classList.add('is-open');
      });
    });
  </script>
{% endblock %}
