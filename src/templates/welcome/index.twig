{% extends "base/base.twig" %}
{% from "base/macros.twig" import icon %}

{% block config %}
  {{ parent() }}

  {% set page = {
    is_onboarding: true,
    title: 'Create Your Digital Person ‚Äî Echo Immortal',
    desc: 'Start creating your Digital Person by sharing your memories, values, and personality traits. Our simple onboarding process helps craft an AI avatar that reflects who you truly are.',
    user_email: 'vladimir.nikishin@gmail.com',
    body_classes: 'page has-stepper'
  } %}

  {% set questions = [
    '<p><strong>Hello! Let‚Äôs get straight to the point:</strong> let‚Äôs create your digital persona. Please start by providing your email address.</p>'
  ] %}



{% endblock %}

{% block head %}
  {{ parent() }}
  <link rel="stylesheet" href="/assets/css/onboarding.css?{{ timestamp }}">
{% endblock %}

{# MAIN CONTENT ------------------------------------------------------------- #}
{% block content %}

  <main class="e-main is-flex-column">
    {# Progress component #}

    <div class="e-messages is-centering">
      {% include 'components/message.twig' with {
        content: questions[0],
        avatar: 'avatar-dp',
        is_incoming: true,
        classes: 'has-large-avatar max-w-none',
        send_time: 'now'|date('H:i')
      } %}
    </div>

    <form class="e-form is-chat-input" action="/welcome" method="get" novalidate>
      <div class="e-form__control">
        <label for="form-chat-input" class="visually-hidden">Message Echo Immortal</label>
        <textarea id="form-chat-input" autofocus spellcheck="false" placeholder="Enter your email address"></textarea>
        <button class="e-btn is-icon" type="submit" disabled aria-label="Send answer">
          {{ icon('arrow-up') }}
        </button>
      </div>
      <footer class="form__footer">
        {{ icon('sm-lock', 'is-sm') }}
        <span>
          Secure SSL Encryption
          <button class="e-btn is-link" type="button" data-role="open-overlay" data-target="freewall">
            üî¥
          </button>
        </span>
      </footer>
    </form>
  </main>

  {% include "components/stepper.twig" %}
{% endblock %}

{% block footer %}{% endblock %}

{% block body_suffix %}
  {{ parent() }}

  <div class="e-modal is-freewall" id="freewall">
    <form class="e-modal__base is-small" id="form-confirmation" action="/welcome">
      <div class="e-modal__body">
        {{ icon('mail') }}
        <h2>Please enter the¬†code sent to <strong>{{ page.user_email }}</strong></h2>
        <fieldset class="d-flex">
          <input type="number">
          <input type="number">
          <input type="number">
          <input type="number">
          <input type="number">
          <input type="number">
        </fieldset>
      </div>
      <footer>
        <button class="e-btn is-outline" type="submit" disabled>Verify email</button>
      </footer>
    </form>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('form-confirmation');
      const inputs = form.querySelectorAll('input[type="number"]');
      const submitButton = form.querySelector('button[type="submit"]');

      inputs.forEach((input, index) => {
        // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤–≤–æ–¥–∞ –¥–æ 1 —Å–∏–º–≤–æ–ª–∞
        input.addEventListener('input', () => {
          input.value = input.value.slice(0, 1);

          // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ñ–æ–∫—É—Å–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –ø–æ–ª–µ
          if (input.value && index < inputs.length - 1) {
            inputs[index + 1].focus();
          }

          // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –ø–æ–ª–µ–π
          checkFormCompletion();
        });

        // –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ–∫—É—Å–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Backspace –Ω–∞ –ø—É—Å—Ç–æ–º –ø–æ–ª–µ
        input.addEventListener('keydown', (e) => {
          if (e.key === 'Backspace' && input.value === '' && index > 0) {
            inputs[index - 1].focus();
          }
        });
      });

      // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –≤—Å–µ –ø–æ–ª—è
      function checkFormCompletion() {
        const allFilled = Array.from(inputs).every((input) => input.value !== '');
        submitButton.disabled = !allFilled;
      }

      // –ó–∞–ø—Ä–µ—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã, –µ—Å–ª–∏ –Ω–µ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
      form.addEventListener('submit', (e) => {
        const allFilled = Array.from(inputs).every((input) => input.value !== '');
        if (!allFilled) {
          e.preventDefault();
        }
      });

      // Open freewall
      document
        .querySelector('[data-role="open-overlay"]')
        .addEventListener('click', (event) => {
          const trigger = event.currentTarget;
          const overlay = trigger.getAttribute('data-target');
          document.getElementById(overlay).classList.add('is-open');
        });
    });
  </script>
{% endblock %}
